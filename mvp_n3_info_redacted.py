# -*- coding: utf-8 -*-
"""MVP_N3_info_redacted.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-aThMegF_uJXddNFgzY2XLXfdS4if8yj
"""

import numpy as np
import matplotlib.pyplot as plt
import os
import folium
import pandas as pd
import base64

class perturbation_manager():
    reverse_day_dict = {'1.0':'Monday', '2.0':'Tuesday', '3.0':'Wednesday', '4.0':'Thursday', '5.0':'Friday',\
        '6.0':'Saturday', '7.0':'Sunday'}
    def __init__(self, data_file_path, labels_file_path, day_index, seed = 5, preturb_amp = 0.1):
        x_loaded = np.load(data_file_path)
        y_loaded = np.load(labels_file_path)

        self.day_index = day_index
        self.weekday_name = self.reverse_day_dict[y_loaded[self.day_index]]

        self.day_x_data = x_loaded[self.day_index,:,:]

        self.rand_seed = seed
        self.preturb_amp = preturb_amp

    def save_plot_sensor(self, sensor_number, save_location = None):
        fig, ax = plt.subplots()
        plt.xlabel('Ten minute intervals')
        plt.ylabel('Occupancy Rate')
        plt.title('Sensor '+ str(sensor_number))
        ax.plot(self.day_x_data[sensor_number, :])
        if save_location is not None:
            plt.savefig(os.path.join(save_location, str(sensor_number)+"_unpreturbed.png"))
            plt.close(fig)

    def save_plot_sensor_preturbed(self, sensor_number, save_location = None):
        fig, ax = plt.subplots()
        plt.xlabel('Ten minute intervals')
        plt.ylabel('Occupancy Rate')
        plt.title('Sensor '+ str(sensor_number))

        ax.plot(sum_with_noise)
        if save_location is not None:
            plt.savefig(os.path.join(save_location, str(sensor_number)+"_preturbed.png"))
            plt.close(fig)

    def make_file_structure(self, folder_name):
        os.mkdir(folder_name)
        for sensor_num in range(self.day_x_data.shape[0]):
            self.save_plot_sensor(sensor_num, folder_name)
            #self.save_plot_sensor_preturbed(sensor_num, folder_name)

x_path = 'C:/Users/1597031412C/Desktop/software_development/AIRO/DoD_SAFE-DaSTZR3zGNhReDDj/c24aie_models/data/UCR/PEMS-SF/X.npy'
y_path = 'C:/Users/1597031412C/Desktop/software_development/AIRO/DoD_SAFE-DaSTZR3zGNhReDDj/c24aie_models/data/UCR/PEMS-SF/y.npy'

manager1 = perturbation_manager(x_path, y_path, 5)

image_location = "C:\\Users\\1597031412C\\Desktop\\software_development\\AIRO\\perturbation_demonstration\\software_files\\attempt_2"

manager1.make_file_structure(image_location)

location_data = pd.read_csv("C:/Users/1597031412C/Desktop/software_development/AIRO/perturbation_demonstration/software_files/map_data.csv")

location_data

m = folium.Map(location=[38, -122])
for row in range(len(location_data)):
    current_row = location_data.iloc[row]
    image_path = "../software_files/attempt_2/" + str(row) + "_unpreturbed.png"
    html_script = f"""
        <!DOCTYPE html>
        <html>
        <img src="{image_path}" width="400" style="border-radius: 50px;"/>
        </html>
    """
    html = folium.Html(html_script, script = True)
    popup = folium.Popup(html, max_width=2650)
    folium.Marker(
        location=[current_row["Latitude"], current_row["Longitude"]], # coordinates for the marker
        popup=popup,
        icon=folium.Icon()
    ).add_to(m)

m

